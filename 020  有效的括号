class Solution {
public:
    bool isMatch(const char& front, const char& back) {
		if ('(' == front)
			return back == ')';
		return front == back - 2;
	}
	bool isValid(string s) {
		int l = s.length();
		stack<char> charStack;
		for (int i = 0; i < l; i++) {
			char currentChar = s[i];
			if (!charStack.empty() && isMatch(charStack.top(), s[i]))
				charStack.pop();
			else
				charStack.push(currentChar);
		}
		return charStack.empty();
	}
};
