class Solution {
public:
    int left,right;
    int binarySR(vector<int>& nums,int l,int r,int target){
        if(l>r)
            return -1;
        int mid=(l+r)>>1;
        if(nums[mid]==target){
            if(mid<left)
                left=mid;
            if(mid>right)
                right=mid;
            binarySR(nums,mid+1,r,target);
            binarySR(nums,l,mid-1,target);
            return mid;
        }
        if(nums[mid]<target)
            return binarySR(nums,mid+1,r,target);
        else
            return binarySR(nums,l,mid-1,target);
    }   
    vector<int> searchRange(vector<int>& nums, int target) {
       left=nums.size()-1,right=0;
        vector<int> res={-1,-1};
        if(binarySR(nums,right,left,target)!=-1){
            res[0]=left;
            res[1]=right;
        }
        return res;
    }
};
