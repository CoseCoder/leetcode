class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int m = nums1.size(), n = nums2.size();
		if (m > n)
			return findMedianSortedArrays(nums2, nums1);
		int l1, l2, r1, r2, c1, c2, l = 0, r = m*2;
		while (l <= r) {
			c1 = (l + r) /2;
			c2 = m + n - c1;
			l1 = (c1 == 0) ? INT_MIN : nums1[(c1 - 1)/2];
			r1 = (c1 == m*2) ? INT_MAX : nums1[c1/2];
			l2 = (c2 == 0) ? INT_MIN : nums2[(c2 - 1)/2];
			r2 = (c2 == n*2) ? INT_MAX : nums2[c2/2];
			if (l1 > r2)
				r = c1 - 1;
			else if (l2 > r1)
				l = c1 + 1;
			else return (max(l1, l2) + min(r1, r2)) / 2.0;
		}
		return -1;
    }
};
