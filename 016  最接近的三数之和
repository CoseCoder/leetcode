class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
       int n = nums.size();
		sort(nums.begin(), nums.end());
		int sum = nums[n - 1] + nums[n - 2] + nums[n - 3];
		if (sum <= target)
			return sum;
		sum = nums[0] + nums[1] + nums[2];
		if (sum >= target)
			return sum;
		int closestSum,minDiffer = INT_MAX;
		for (int i = 0; i < n - 2; i++) {
			int l=i+1,r=n-1;
				while(l<r){
					sum = nums[i] + nums[l] + nums[r];
					if (sum == target)
						return target;
					else if (abs(sum - target) < minDiffer) {
						minDiffer = abs(sum - target);
						closestSum = sum;
					}
					if (sum > target)
						r--;
                    else
                        l++;
				}
		}
		return closestSum;
    }
};
