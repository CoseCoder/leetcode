class Solution {
public:
    int binarySearch(vector<int>& nums,int l,int target){//数组已排序
        int r=nums.size()-1;
        int mid;
        while(l<=r){
            mid=(l+r)>>1;
            if(nums[mid]<target)
                l=mid+1;
            else if(nums[mid]>target)
                r=mid-1;
            else        
                return mid;
        }
        return 0;
    }
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<vector<int>> res;
        int size=nums.size();
        sort(nums.begin(),nums.end());        
        for(int i=0;i<size&&nums[i]<1;i++){
            if(i&&nums[i]==nums[i-1])
                continue;
            for(int j=i+1;j<size&&nums[i]+nums[j]<1;j++){
                 if(j>i+1&&nums[j]==nums[j-1])
                    continue;
                int t=nums[i]+nums[j];
                if(binarySearch(nums,j+1,-t))        
                    res.push_back({nums[i],nums[j],-t});
            }
        }
        return res;
    }
};
