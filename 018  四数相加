class Solution {
public:
    vector<vector<int>> fourSum(vector<int>& nums, int target) {
        int n=nums.size();        
        vector<vector<int>> res;
        if(n<4)
            return res;
        sort(nums.begin(),nums.end());
        for (int i = 0; i<n - 3; i++) {
            if(i>0&&nums[i]==nums[i-1])
                continue;
            if(nums[i]+nums[i+1]+nums[i+2]+nums[i+3]>target) break;
            if(nums[i]+nums[n-3]+nums[n-2]+nums[n-1]<target) continue;
			for (int j = i + 1; j<n - 2; j++) {
                if(j>i+1&&nums[j]==nums[j-1])
                    continue;
                if(nums[i]+nums[j]+nums[j+1]+nums[j+2]>target) break;
                if(nums[i]+nums[j]+nums[n-2]+nums[n-1]<target) continue;
				int l = j + 1, r = n - 1, sumA = nums[i] + nums[j];
				while (l<r) {
					int sum = sumA + nums[l] + nums[r];
					if (sum == target) {
						res.push_back({ nums[i],nums[j],nums[l],nums[r] });
                        l++;
                        while(l<n-1&&nums[l]==nums[l-1])
                            l++;
                        r--;
					}
					else if (sum<target)
						l++;
					else r--;
				}
			}
		}
        return res;
    }
};
