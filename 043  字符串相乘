class Solution {
public:
    string multiply(string num1, string num2) {
		int n1 = num1.length(), n2 = num2.length();
		int n = n1 + n2;
		string res(n + 1, '0');
		res[n] = '\0';
		for (int i = n2 - 1, j = 0; i > -1; i--, j++) {
			int x = num2[i] - '0', y, r, carry = 0;
			if (x == 0) {
				continue;
			}
			string temp(n1 + 1, '0');
			for (int k = n1-1; k > -1; k--) {
				y = num1[k] - '0';
				r = (x*y + carry);
				temp[k+1] = r % 10 + '0';
				carry = r / 10;
			}
			temp[0] = carry + '0';
			carry = 0;
			for (int k = 0; k <= n1; k++) {
				r = res[n - 1 - j - k] - '0' + temp[n1 - k] - '0' + carry;
				res[n - 1 - j - k] = r % 10 + '0';
				carry = r / 10;
			}
		}
		int i = 0;
		while (i < n - 1 && res[i] == '0')
			i++;
		return res.substr(i);
	}
  /*  更简洁快速的代码
  string multiply(string num1, string num2) {     
		int n1 = num1.length(), n2 = num2.length();	
		int n = n1 + n2;
		vector<int> resV(n, 0);
        
		for (int i = n1 - 1; i >=0; i--) 
			for (int j = n2 - 1; j >=0; j--) 
				resV[j+i+1]+=(num1[i]-'0')*(num2[j]-'0');
                
        for(int i=n-1;i>=0;i--){
            resV[i-1]+=resV[i]/10;
            resV[i]%=10;
        }
        
		int i = 0;
		while (i < n && resV[i] == 0)
			i++;
        
    string res="";
    while(i<n)
        res+='0'+resV[i++];
        
    if(res.empty())
        return "0";
		return res;
	}
  */
};
